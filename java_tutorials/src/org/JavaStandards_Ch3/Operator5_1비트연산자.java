/*p.121 ~
#5.2 비트 연산자  & \ ^ ~ << >>
	1) 피연산자를 비트단위로 논리 연산
	2) 이진수로 표현했을때의 각 자리를 아래의 규칙에 따라 연산 수행
	3) 피연산자로 실수는 허용하지 않는다
	4) 정수(문자 포함)만 허용된다
	
	\(OR연산자) 피연산자 중 한쪽의 값이 1이면, 1의 결과를 얻는다. 그외에는 0을 얻는다.
	&(AND연산자) 피연산자 양쪽이 모두 1이어야만 1을 결과로 얻는다. 그외에는 0을 얻는다
	^(XOR 연산자) 피연산자의 값이 서로 다를 떄만 1을 결과로 얻는다 같을때는 0을 얻는다.
  	
  	x		y		x\y		x&y			x^y
  	1		1		1		 1			 0
  	1		0		1		 0			 1
  	0		1		1		 0			 1
  	0		0		0		 0			 0
[참고] 연산자 ^는 배타적 XOR(eXclusive OR)라고 하며, 피연산자의 값이 서로 다른 경우
즉, 배타적인 경우에만 참(1)을 결과로 얻는다.

  	책 참고 p.121 ~122
  	
  	#비트 전환 연산자  ~
  	책 참고~123~
  	
  	#쉬프트 연산자 	<<			>>
 
 	#그외의 연산자  ?:
 	삼항 연산자 
 	책 참고~
 	
 	#대입 연산자 = op=
  	final int MAX = 3;
  	MAX=10; 			//변수앞에 final을 붙이면 상수가 됨
  						//에러, 상구 Max에 새로운 값을 저장할수 없다.
  	
  	op=				=
  	i *=10+j	i=i*(10+j);
  
  
 */









package org.JavaStandards_Ch3;

public class Operator5_1비트연산자 {

	public static void main(String[] args) {

		
		
		
		
		

	}

}
