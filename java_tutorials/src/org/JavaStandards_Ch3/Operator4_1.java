/*p.114~117
5. 논리연산자
	:x가 4보다 작거나 10보다 크다와 같이 두개의 조건이 결합된 경우 사용
	:둘이상의 조건을 AND그리고 나 OR또는 으로 연결하여 하나의 식으로 표현
	
	5.1 논리 연산자 - &&, \\, !
	&& (AND 결합) : 피연산자 양쪽 모두 true이어야 true 결과를 얻음
	\\ (OR 결합)  : 피연산자 중 어느 한쪽만 true면 true결과를 얻음
	* 논리 연산자는 피연산자로 boolean형 또는 boolean형 값을 결과로 하는 조건식만을 허용

		x			y			x\\y			x&&y
		true		true		true			true			
		true		false		true			false	
		false		true		true			false
		false		false		false			false

	##자주 사용될만한 몇가지 예, 논리연산자가 실제로 어떻게 사용되는지, 주의점은 뭔지
	1) x는 10보다 크고,(그리고) 20보다 작다.
				x >10 && x<20
		이경우 가독성을 위해, 10<x && x<20 라고도 쓴다. (보통은 변수를 왼쪽)
	주의! 		10 < x < 20과 같이 표현은 안됨.
	2)i는 2의 배수 또는(OR) 3의 배수이다.
	  : 어떤 수가 2의 배수라는 말은 2로 나누었을 떄 나머지가 0, 나머지값이 0인지 확인
	  			i%2==0 \\ i%3==0
	  i의 값이 8일때, 위의 식은 다음과 같은 과정으로 연산.
	  			i%2==0 	\\ 	i%3==0
	  		->	8%2==0 	\\ 	8%3==0
			->	0==0 	\\ 	2==0
			->	true 	\\ 	false
			->			true
	3) i는 2의 배수 또는 3의 배수지만 6의 배수는 아니다.
				i%2==0 \\ i%3==0 && i%6!=0    =>괄호를 사용해야함 &&의 우선순위가 먼저임 \\보다
				(i%2==0 \\ i%3==0) && i%6!=0  =>괄호가 없다면 &&부터
		아래 식은 동일하다. 하지만 괄호를 쳐서 먼저 해야할것을 명확히 해주는 것이 좋다.		
				i%2==0 \\ i%3==0 && i%6!=0
				i%2==0 \\ (i%3==0 && i%6!=0)
	4) 문자ch는 숫자 (0~9)이다.
				'0' <= ch && ch <= '9'
		:문자 '0'부터 '9'까지의 유니코드는 [참고 p.115 ~116]
	5) 문자 ch는 대문자 또는 소문자이다.
				('a' <= ch && ch<='z') \\ ('A' <= ch && ch<='Z')



 */











package org.JavaStandards_Ch3;

public class Operator4_1 {

	public static void main(String[] args) {
//3-24 p.116
//		int x = 0;
//		char ch = ' ';
//		
//		x = 15;
//		System.out.printf("x=%2d, 10<x && x < 20 = %b%n", x, 10 <x && x <20);
//		
//		x = 6;
//		System.out.printf("x=%2d, x%%2==0 \\ x%%3==0 && x%%6!=0 =%b%n", x, x%2==0 \\ x%3==0 && x%6!=0);
//		System.out.printf("x=%2d, (x%%2==0 \\ x%%3==0) && x%%6!=0 =%b%n", x, (x%2==0\\x%3==0)&&x%6!=0);
//		
//		x = '1';
//		System.out.printf("ch='%c', '0' <= ch && ch <= '9' = %b%n", ch, '0' <=ch && ch <='9');
//		
//		x = 'a';
//		
//		
//		x = 'A';
//		
//		
//		x = 'q';
//3-25
		
		
		
		
		
		
		
		
	}

}
