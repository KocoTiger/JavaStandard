/* p. 20~22
 
1-1. 변수 (variable)
변수 : 단 하나의 값을 저장할 수 있는 메모리 공간
값 (data) : 변경 될수 있다.
1) 값(data)을 저장할 수있는 메모리 공간
2) 하나의 변수에 단 하나의 값만 저장 가능
3) 새로운 값을 저장시, 기존의 값 사라짐.

1-2. 변수의 선언, 초기화
# 변수 선언 :
 int       age; //age라는 변수의 이름을 선언
///////////변수 타입    변수 이름/////////////
////////////(정수)	(나이는 숫자)///////////

# 변수타입 : 정수, 실수, 문자형 등
# 변수 이름 : 변수에 붙인 이름 (메모리 공간에 이름을 붙임)
			저장공간(변수)에 값(data)을 저장
			변수는 다른 변수와 구별되어야 함 (서로이름이 다름)
# 변수 선언 시, 메모리의 빈공간에 변수 타입에 알맞은 크기의 저장공간이 확보
			 앞으로 이공간은 변수 이름을 통해 사용 가능

#변수의 초기화
: 변수 선언 후, 변수를 사용 가능하지만
  그전에 반드시! 변수를 초기화 (initialization)해야함.
  이유 : 다른 프로그램에 의해 저장된 알 수 없는 값(garbage value)가 남아있을 수 있기때문.

/////////////변수의 초기화란, 변수를 사용하기 전에 처음으로 값을 저장하는 것!/////////

중요!
# 변수값 저장
: 값 지정시 반드시 대입 연산자 이용 (=)
  오른쪽의 값을 왼쪽 (변수)에 저장하라는 뜻.
  대입연산자의 왼쪽에는 반드시! 변수처럼 값을 저장할 수있는 공간이 와야한다!
ex>
int age = 25; //변수 age선언! 하고 25로 초기화한다!

ex> 양쪽의 코드는 서로 같은 의미의 다른 코드
1) 변수는 보통 한줄에 하나씩 선언
2) 변수타입 (int, float, short, double...)이 같은 경우 콤마 ','를 구분자로
해서 변수를 한줄에 선언 하기도 함
int a;
int b;					int a,b;
int x = 0;				int x = 0, y = 0;
int y = 0;

# 변수의 종류에 따라 변수의 초기화를 생략 가능
# 변수는 사용되기 전, 적절한 값으로 초기화 하는 것이 좋음
[참고 6장_변수의 초기화]
: 지역변수는 사용되기 전, 초기화를 반드시 해야함
: (하지만) 클래스 변수, 인스턴스 변수는 초기화 생략 가능.

*/


////age와 year에 값 저장 후 출력
package org.javastandard.javaexercise.ch1variable;

public class ch2_variableEx1_1_VariableConstant {

	public static void main(String[] args) {
		int year = 0; 
		int age = 14;
		
		System.out.println(year);
		System.out.println(age);
		
		year = age + 2000;
		age = age + 1;
		
		System.out.println(year);
		System.out.println(age);
		
	}//end main

}//end class
