//비트캠프 기초강의 2022-01-27
//- jdoodle접속
//
//★ 함수
//작은 단위, 조합 해서 코딩 
//함수의 기본적인 코드들
//(함수 기본적인 개념들 잡기)


//함수의 전달과 반환의 개념
/*
1. 함수명 정해야함 (영어 동사를 주로 이용)
2. 변수명 함수명은 소문자가 기본
섞는다면 처음은 소문자, 다음단어부턴 첫글자 대문자 (ex> getMembers)
3. 함수의 식 구조
    반환형 함수명(변수명 <- 매개변수(parameter)) <--- 함수 선언부
    {            <-- 함수 구현부 (Body)
            
            반환형 void가 아니면
            반드시 return 있어야 한다. (없으면 error)
            --> 함수의 실행이 종료된다. (여러번 쓰는 것이 의미가 없다. / return이후 실행되지 않는다.)
                                        (보통 return은 한번만 쓴다./왠만하면 함수에 한번만 쓰도록 권장)
    }
    * 파이썬은 반환형이라는 말이 없다
    */

public class MyClass {
// public static void main(String args[]) {// ex> <--매개 변수 args /void + 함수 : 함수가 반환하는것이 없다란 뜻. 
 public static void main(String args[]) { //호출자(측)  
    // fn 함수를 호출한다.
    fn(); //피호출자 (측)
    // main함수가 fn코드를 실행 시킨다
} // end main

public static void fn(){
    System.out.println("invoke fn ---");
    //호출측 함수에 static이 붙은 다른 함수를 호출하려면 이 호출을 호출하는 함수는 마찬가지로 static이 붙어야함
    //static은 정적 함수
    //public은 접근 제한자
    
    //함수 매우 중요 포인트!!!!
    //main 함수가 다른 함수를 실행할때, 호출자는 실행되지않고 기다리고 있다.
    //호출이 되면 fn 함수가 활성화가 되고 그 안에있는 함수가 실행 된다.
    //메인 함수가 실행하려면 자기가 호출한 함수가 끝나야 자기가 실행된다
    //실행 중인것은 하나밖에 없다. 나머지 함수는 기다리는 상태가 된다. 
    //시퀀스 다이어 그램 : 하나가 끝나면 돌아가고 돌아가고 메인까지 돌아와야 프로그램이 종료, 이런것을 그린다.
    
    //컨테스트 스위칭 : 함수에서 함수로 바뀌는 때 (기다리는 때)
    //실행된 순서의 반대로 되돌아감 (스택이라고 한다)
    // 1->2->3, 3->2->1
    //함수를 Call한다, 호출한다, 함수가 Stack방식으로 실행
    // Call Stack이라는 말 많이 들을 것임 -> 함수를 사용하는구나 라고 생각해라
}

}





	